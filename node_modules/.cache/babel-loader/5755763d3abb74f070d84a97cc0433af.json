{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHubRep\\\\React-practice\\\\React-practice\\\\src\\\\components\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpensesFilter from \"./ExpensesFilter/ExpensesFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesRender.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [yearSelected, setYearSelected] = useState(\"\");\n\n  const onSaveExpenseFilterHandler = event => {\n    setYearSelected(event);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === yearSelected;\n  });\n  console.log(\"Expenses.js\", yearSelected);\n  let expensesContent = alert(\"No Items Found\");\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expenses => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expenses.title,\n      amount: expenses.amount,\n      date: expenses.date\n    }, expenses.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onSaveExpenseFilter: onSaveExpenseFilterHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 && alert(\"No Items Found\"), filteredExpenses.length > 0 && filteredExpenses.map(expenses => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expenses.title,\n      amount: expenses.amount,\n      date: expenses.date\n    }, expenses.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n/* Alternative way with ternary expression\r\n{filteredExpenses.length === 0\r\n  ? alert(\"No Items Found\")\r\n  : filteredExpenses.map((expenses) => (\r\n      <ExpenseItem\r\n        key={expenses.id}\r\n        title={expenses.title}\r\n        amount={expenses.amount}\r\n        date={expenses.date}\r\n      ></ExpenseItem>\r\n    ))}*/\n\n\n_s(Expenses, \"etPwIA/Fw00aTbzm9xlki/gBuHo=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpensesFilter","ExpenseItem","useState","Expenses","props","yearSelected","setYearSelected","onSaveExpenseFilterHandler","event","filteredExpenses","items","filter","expense","date","getFullYear","toString","console","log","expensesContent","alert","length","map","expenses","title","amount","id"],"sources":["D:/GitHubRep/React-practice/React-practice/src/components/Expenses.js"],"sourcesContent":["import ExpensesFilter from \"./ExpensesFilter/ExpensesFilter\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesRender.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Expenses(props) {\r\n  const [yearSelected, setYearSelected] = useState(\"\");\r\n\r\n  const onSaveExpenseFilterHandler = (event) => {\r\n    setYearSelected(event);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === yearSelected;\r\n  });\r\n\r\n  console.log(\"Expenses.js\", yearSelected);\r\n\r\n\r\n  let expensesContent = alert(\"No Items Found\");\r\n  if (filteredExpenses.length > 0) {\r\n    expensesContent = filteredExpenses.map((expenses) => (\r\n      <ExpenseItem\r\n        key={expenses.id}\r\n        title={expenses.title}\r\n        amount={expenses.amount}\r\n        date={expenses.date}\r\n      ></ExpenseItem>\r\n  ))}\r\n\r\n\r\n  return (\r\n    <div className=\"expenses\">\r\n      <ExpensesFilter\r\n        onSaveExpenseFilter={onSaveExpenseFilterHandler}\r\n      ></ExpensesFilter>\r\n      {filteredExpenses.length === 0 && alert(\"No Items Found\")}\r\n      {filteredExpenses.length > 0 &&\r\n        filteredExpenses.map((expenses) => (\r\n          <ExpenseItem\r\n            key={expenses.id}\r\n            title={expenses.title}\r\n            amount={expenses.amount}\r\n            date={expenses.date}\r\n          ></ExpenseItem>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n/* Alternative way with ternary expression\r\n{filteredExpenses.length === 0\r\n  ? alert(\"No Items Found\")\r\n  : filteredExpenses.map((expenses) => (\r\n      <ExpenseItem\r\n        key={expenses.id}\r\n        title={expenses.title}\r\n        amount={expenses.amount}\r\n        date={expenses.date}\r\n      ></ExpenseItem>\r\n    ))}*/\r\n\r\nexport default Expenses;\r\n"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,iCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,sBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACvB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;;EAEA,MAAMK,0BAA0B,GAAIC,KAAD,IAAW;IAC5CF,eAAe,CAACE,KAAD,CAAf;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;IACvD,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;EACD,CAFwB,CAAzB;EAIAW,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BZ,YAA3B;EAGA,IAAIa,eAAe,GAAGC,KAAK,CAAC,gBAAD,CAA3B;;EACA,IAAIV,gBAAgB,CAACW,MAAjB,GAA0B,CAA9B,EAAiC;IAC/BF,eAAe,GAAGT,gBAAgB,CAACY,GAAjB,CAAsBC,QAAD,iBACrC,QAAC,WAAD;MAEE,KAAK,EAAEA,QAAQ,CAACC,KAFlB;MAGE,MAAM,EAAED,QAAQ,CAACE,MAHnB;MAIE,IAAI,EAAEF,QAAQ,CAACT;IAJjB,GACOS,QAAQ,CAACG,EADhB;MAAA;MAAA;MAAA;IAAA,QADgB,CAAlB;EAOC;;EAGH,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE,QAAC,cAAD;MACE,mBAAmB,EAAElB;IADvB;MAAA;MAAA;MAAA;IAAA,QADF,EAIGE,gBAAgB,CAACW,MAAjB,KAA4B,CAA5B,IAAiCD,KAAK,CAAC,gBAAD,CAJzC,EAKGV,gBAAgB,CAACW,MAAjB,GAA0B,CAA1B,IACCX,gBAAgB,CAACY,GAAjB,CAAsBC,QAAD,iBACnB,QAAC,WAAD;MAEE,KAAK,EAAEA,QAAQ,CAACC,KAFlB;MAGE,MAAM,EAAED,QAAQ,CAACE,MAHnB;MAIE,IAAI,EAAEF,QAAQ,CAACT;IAJjB,GACOS,QAAQ,CAACG,EADhB;MAAA;MAAA;MAAA;IAAA,QADF,CANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAtDStB,Q;;KAAAA,Q;AAwDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}